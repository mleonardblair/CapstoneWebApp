@using EcommerceApp.Shared.DTOs.PageDtos;
@using System.Net.Http.Headers;
@inject HttpClient Http
@inject ISiteService SiteService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@attribute [Route(RouteConstants.Gallery)]
<PageTitle>Gallery</PageTitle>
<MudContainer Class="" Style="height: 100vh;">
    <!-- Updated container height -->
    <MudMainContent Style="height: 100vh;">
 
        <MudText Typo="Typo.h5" Style="text-align: center;">Gallery</MudText>
        <MudText Typo="Typo.body1" Style="text-align: center;">Welcome to the gallery!</MudText>
        <MudGrid Class="login-grid" Style="justify-content: center; align-items: center; height: 60%;">
            <MudItem xs="12" lg="6" xl="6" Style="align-self: center; height: inherit;">
  
                <MudCarousel Class="mud-carousel" ShowArrows="true" ShowBullets="true"
                             EnableSwipeGesture="true" AutoCycle="@_autocycle"
                             TData="string" Style="height: 40vh; position: relative;"
                             ItemsSource="galleryDto?.GalleryImages">
                    @if (galleryDto != null)
                    {
                        @foreach (var imageUrl in galleryDto.GalleryImages)
                        {
                            <MudCarouselItem Style="height: 100%; display: flex; justify-content: center; align-items: center;">
                                <img src="@imageUrl" alt="Gallery Image" style="height: 100%; width: 100%; object-fit: contain;" />
                            </MudCarouselItem>
                        }
                    }
                    else
                    {
                        <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1;">
                            <MudProgressCircular Color="Color.Dark" Size="Size.Large" Indeterminate="true" />
                        </div>
                    }
                </MudCarousel>


                @if (SiteService.Role == "Admin")
                {
                    <MudSwitch @bind-Checked="@_autocycle" Color="Color.Primary">Auto Cycle (Default: 5 secs)</MudSwitch>
                    <MudText Typo="Typo.h6">Upload New Photo</MudText>

                    <MudFileUpload T="IBrowserFile" Accept=".png, .jpg, .webp, .jpeg" FilesChanged="UploadFiles" MaximumFileCount="100">
                        <ButtonTemplate Context="fileUploadContext">
                            <MudButton
                                   HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.CloudUpload"
                                       for="@fileUploadContext">
                                Select Image
                            </MudButton>
                        </ButtonTemplate>
                    </MudFileUpload>
                   
                }
            </MudItem>

        </MudGrid>
     
    </MudMainContent>
</MudContainer>

@code {
    // Existing properties
    private int selectedIndex = 1;
    private MudCarousel<string> _carousel = new MudCarousel<string>();
    private bool isAdmin = false;
    private GalleryDto galleryDto = null;
    private bool _autocycle = true;
    private IList<string> _source = new List<string>() { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

    protected override async Task OnInitializedAsync()
    {
        SiteService.Role = await AuthService.GetUserRole();
        galleryDto = await SiteService.GetGalleryAsync();
    }

    private async Task UploadFiles(IBrowserFile file)
    {
        SiteService.files.Add(file);

        // Use the service method instead of direct HTTP call
        bool success = await SiteService.UploadGalleryImageAsync(file);

        if (success)
        {
            // Refresh gallery data to show the new image
            galleryDto = await SiteService.GetGalleryAsync();
            StateHasChanged();
        }
    }
}
