@page "/admin-dashboard"
@attribute [Authorize(Roles ="Admin")]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using MudBlazor

<AuthorizeView>
    <Authorized>
       @if (context.User.IsInRole("Admin"))
        {
              @if (!string.IsNullOrEmpty(UserName))
            {
                <MudAlert Severity="Severity.Normal" Variant="Variant.Filled" Class="mb-4">
                    <MudAlertTitle>Hi @UserName!</MudAlertTitle>
                    <MudText Typo="Typo.body1">Welcome to your admin account management page.</MudText>
                </MudAlert>
            }
            <PageTitle>@UserName - Admin Management</PageTitle>
            <div class="flex-container">
                <div class="flex-item pb-xl-15 pb-lg-15 pb-md-15 pb-sm-5 pb-xs-5">
                    <MudText Typo="Typo.h4">Administrator Dashboard</MudText>
                </div>
                <MudContainer MaxWidth="MaxWidth.Small">
                    <MudGrid Justify="Justify.Center">
                      
                        <ReusableCardDisplay IconPath="/images/admin/account-svgrepo-com2.png"
                                 Title="My Profile"
                                 OnClick="GoToProfile"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                        <ReusableCardDisplay IconPath="/images/admin/friend-svgrepo-1.png"
                                 Title="Users"
                                 OnClick="GoToUsers"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                        <ReusableCardDisplay IconPath="/images/admin/truck-svgrepo-1.png"
                                         Title="View All Orders" 
                                 OnClick="GoToAdminOrders"                
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                        <ReusableCardDisplay IconPath="/images/admin/pay-svgrepo-1.png"
                                         Title="Reports" 
                                 OnClick="GoToReports"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5"  />
                        <ReusableCardDisplay IconPath="/images/admin/account-svgrepo-com2.png"
                                         Title="View Categories"
                                         OnClick="GoToCategories"
                                         Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                        <ReusableCardDisplay IconPath="/images/admin/kudakurage-svgrepo-1.png"
                                         Title="Product Catelogue"
                                         OnClick="GoToProductCatelogue"
                                         Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                    </MudGrid>
                </MudContainer>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this page. Please log in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            // You can access the user's name using the claim types
            UserName = user.FindFirst(c => c?.Type == System.Security.Claims.ClaimTypes.Name)?.Value;
            // If the above doesn't work, it might be stored in a different claim, for example:
            // userName = user.Identity.Name;
        }
        else
        {
            UserName = "";
        }
    }
    private string UserName { get; set; }

    private void GoToCategories() => NavigationManager.NavigateTo("/admin-dashboard/categories");
    private void GoToAdminOrders() => NavigationManager.NavigateTo("/admin-dashboard/orders");
    private void GoToUsers() => NavigationManager.NavigateTo("/admin-dashboard/users");
    private void GoToProfile() => NavigationManager.NavigateTo("/admin-dashboard/profile");
    // Out of scope.
   // private void GoToComments() => NavigationManager.NavigateTo("/admin-dashboard/comments");
    private void GoToReports() => NavigationManager.NavigateTo("/admin-dashboard/reports");
    private void GoToProductCatelogue() => NavigationManager.NavigateTo("/admin-dashboard/product-catelogue");

    // You can add additional methods for navigation or other actions for each card
}
