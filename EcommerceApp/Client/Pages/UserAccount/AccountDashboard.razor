@page "/account-dashboard"
@attribute [Authorize(Roles="Customer")]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization;
@using MudBlazor

<AuthorizeView>
    <Authorized>
        @if (context.User.IsInRole("Customer"))
        {
            @if (!string.IsNullOrEmpty(UserName))
            {
                <MudAlert Severity="Severity.Info" Variant="Variant.Filled" Class="mb-4">
                    <MudAlertTitle>Hi @UserName!</MudAlertTitle>
                    <MudText Typo="Typo.body1">Welcome to your account management page.</MudText>
                </MudAlert>
            }
            <PageTitle>@UserName - Account Management</PageTitle>
            <div class="flex-container">
                <div class="flex-item pb-xl-15 pb-lg-15 pb-md-15 pb-sm-5 pb-xs-5">
                    <MudText Typo="Typo.h4">Account Management</MudText>
                </div>
                <MudContainer MaxWidth="MaxWidth.Small">
                    <MudGrid Justify="Justify.Center">
                        <ReusableCardDisplay IconPath="/images/acctmgmt/account-svgrepocom2.svg"
                                 Title="My Profile"
                                 OnClick="GoToProfile"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5" 
                                 ImageAttributes="@(new Dictionary<string, object>{{ "style", "margin-top:14px;" },})"
                                 TextAttributes="@(new Dictionary<string, object>{{ "style", "margin-top:14px;" },})" />
                        <ReusableCardDisplay IconPath="/images/acctmgmt/truck-svgrepocom2.svg" 
                                 Title="Orders & Returns" 
                                 OnClick="GoToOrders"                
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5" />
                        <ReusableCardDisplay IconPath="/images/acctmgmt/heart-svgrepocom2.svg" 
                                 Title="My Favourites"        
                                 OnClick="GoToFavourites"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5"  />
                        <ReusableCardDisplay IconPath="/images/acctmgmt/pay-svgrepocom2.svg" 
                                 Title="My Orders" 
                                 OnClick="GoToPayments"
                                 Xs="12" Sm="12" Md="5" Lg="5" Xl="5"  />
                    </MudGrid>
                </MudContainer>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this page. Please log in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            // You can access the user's name using the claim types
            UserName = user.FindFirst(c => c?.Type == System.Security.Claims.ClaimTypes.Name)?.Value;
            // If the above doesn't work, it might be stored in a different claim, for example:
            // userName = user.Identity.Name;
        }
        else
        {
            UserName = "";
        }
    }
    private string UserName { get; set; }
    private void GoToProfile() => NavigationManager.NavigateTo("/account-management/profile");
    private void GoToOrders() => NavigationManager.NavigateTo("/account-management/orders");
    private void GoToFavourites() => NavigationManager.NavigateTo("/account-management/favorites");
    private void GoToPayments() => NavigationManager.NavigateTo("/account-management/payments");

    // You can add additional methods for navigation or other actions for each card
}
