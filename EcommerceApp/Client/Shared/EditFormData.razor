@page "/admin/shop/{ProductId}"
@using EcommerceApp.Shared.DTOs;
@inject HttpClient HttpClient
@inject IProductService ProductService;
@inject NavigationManager NavigationManager

<h3>Edit Product</h3>

@if (product == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText id="name" @bind-Value="product.Name" />
        <InputText id="description" @bind-Value="product.Description" />
        <InputNumber id="price" @bind-Value="product.Price" />
        <InputNumber id="stockQuantity" @bind-Value="product.StockQuantity" />
        <InputNumber id="categoryId" @bind-Value="product.CategoryId" />
        <!-- Add more fields as needed -->

        <button type="submit">Update</button>
    </EditForm>
}

@code {
    [Parameter]
    public Guid? ProductId { get; set; }

    private ProductDto product = new ProductDto();

    protected override async Task OnInitializedAsync()
    {
        var serviceResponse = await HttpClient.GetFromJsonAsync<ServiceResponse<ProductDto>>($"api/products/{ProductId}");
        if(serviceResponse?.Data != null){
            product = serviceResponse.Data;
        }
    }

    private async Task HandleValidSubmit()
    {
        var response = await ProductService.UpdateProductByIdAsync(product);
        if (response.Success) 
        {
            NavigationManager.NavigateTo("/shop"); // Redirect to the list of products
        }
        

    }
}
