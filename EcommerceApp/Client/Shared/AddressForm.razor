@inject IAddressService AddressService


@if(address == null)
{
    <span>You haven't specified a delivery address, yet.
        <button class="btn" @onclick="InitAddress">Add an address?</button>
    </span>
}
else if (!editAddress)
{
    <p>
        <span>@address.FirstName @address.LastName</span>
        <span>@address.AddressLine</span>
        <span>@address.City, @address.Province, @address.PostalCode</span>
        <span>@address.Country</span>
        <button class="btn" @onclick="EditAddress">Edit</button>
    </p>
}
else
{
    <EditForm Model="address" OnSubmit="SubmitAddress">
        <div class="mb-3">
            <label for="firstname">FirstName</label>
            <InputText id="firstname" @bind-Value="address.FirstName" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="lastname">LastName</label>
            <InputText id="lastname" @bind-Value="address.LastName" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="addressline">Address Line</label>
            <InputText id="addressline" @bind-Value="address.AddressLine" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="city">City</label>
            <InputText id="city" @bind-Value="address.City" class="form-control" />
        </div>
       @* <div class="mb-3">
            <label for="province">Province</label>
            <InputText id="province" @bind-Value="address.Province" class="form-control" />
        </div>*@
        <div class="mb-3">
            <label for="province">Province</label>
            <InputSelect id="province" @bind-Value="address.Province" class="form-control">
                @foreach (var province in provinces)
                {
                    <option value="@province">@province</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="postalcode">Postal Code</label>
            <InputText id="postalcode" @bind-Value="address.PostalCode" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="country">@countryLabel</label>
            <input id="country" value="Canada" class="form-control" readonly />
        </div>



        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    string countryLabel = string.Empty;
    List<AddressDto> addresses = new List<AddressDto>();
    AddressDto address = null;
    bool editAddress = false;
    List<string> provinces = new List<string>
    {
        "Alberta",
        "British Columbia",
        "Manitoba",
        "New Brunswick",
        "Newfoundland and Labrador",
        "Northwest Territories",
        "Nova Scotia",
        "Nunavut",
        "Ontario",
        "Prince Edward Island",
        "Quebec",
        "Saskatchewan",
        "Yukon"
    };

    private async Task SubmitAddress()
    {
        address.Country = "Canada";
        editAddress = false;
        address = await AddressService.AddOrUpdateAddressAsync(address);
    }

    // Resets address to null and editAddress to false
    private void InitAddress()
    {
        address = new AddressDto();
        editAddress = true;
        address.Country = "Canada";
    }

    /// <summary>
    /// When called sets editAddress mode to true
    /// </summary>
    private void EditAddress()
    {
        editAddress = true;
    }

}
